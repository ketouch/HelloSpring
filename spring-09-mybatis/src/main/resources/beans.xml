<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <!--配置Druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- ”连接“的基本属性  -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/stumanager" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <!-- 连接池属性 -->
        <property name="initialSize" value="100" />
        <property name="maxActive" value="1000" />
        <property name="maxWait" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="keepAlive" value="true" />
        <property name="timeBetweenEvictionRunsMillis" value="-1" />
        <property name="minIdle" value="20" />
        <property name="removeAbandoned" value="false"/>
        <property name="removeAbandonedTimeout" value="180"/>
        <property name="logAbandoned" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="filters" value="stat,wall,slf4j"/>
        <property name="connectionProperties" value="druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis的配置文件，也可以省略，直接配置属性-->
        <!--<property name="configLocation" value="mybatis-config.xml"/>-->
        <!--配置别名-->
        <property name="typeAliasesPackage" value="edu.nustti.entity"/>
        <!--配置mapper路径-->
        <property name="mapperLocations" value="classpath:edu/nustti/mapper/*.xml"/>
    </bean>
    <!--方法1：
    spring-mybatis下面有个SqlSessionTemplate实现了SqlSession接口，
        只需要通过注入SqlSesssionFactory对象就能获取到SqlSession对象-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>
    <!--方法2：-->
    <bean id="adminMapper" class="edu.nustti.mapper.AdminMapperImpl">
        <property name="sqlSession" ref="sqlSession"/>
    </bean>
    <!--方法3：-->
    <!--如果这么配置，那么上面的sqlSession就不需要配置了-->
    <bean id="adminMapper2" class="edu.nustti.mapper.AdminMapperImpl2">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
</beans>