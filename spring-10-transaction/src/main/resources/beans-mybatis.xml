<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <!--配置Druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- ”连接“的基本属性  -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/stumanager"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
        <!-- 连接池属性 -->
        <property name="initialSize" value="100"/>
        <property name="maxActive" value="1000"/>
        <property name="maxWait" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="keepAlive" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="-1"/>
        <property name="minIdle" value="20"/>
        <property name="removeAbandoned" value="false"/>
        <property name="removeAbandonedTimeout" value="180"/>
        <property name="logAbandoned" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="filters" value="stat,wall,slf4j"/>
        <property name="connectionProperties" value="druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis的配置文件，也可以省略，直接配置属性-->
        <!--<property name="configLocation" value="mybatis-config.xml"/>-->
        <!--配置别名-->
        <property name="typeAliasesPackage" value="edu.nustti.entity"/>
        <!--配置mapper路径-->
        <property name="mapperLocations" value="classpath:edu/nustti/mapper/*.xml"/>
    </bean>
    <!--spring-mybatis下面有个SqlSessionTemplate实现了SqlSession接口，
    只需要通过注入SqlSesssionFactory对象就能获取到SqlSession对象-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <!--开启事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSource"/>
    </bean>
    <!--结合AOP配置需要开启事务的方法-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!--配置事务切入点-->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* edu.nustti.mapper.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
</beans>